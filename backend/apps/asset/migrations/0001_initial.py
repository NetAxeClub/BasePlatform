# Generated by Django 3.2.19 on 2023-06-01 16:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import simple_history.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('automation', '0001_initial'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admin_server', models.CharField(max_length=32, verbose_name='登录主机')),
                ('admin_remote_ip', models.GenericIPAddressField(verbose_name='远程地址')),
                ('admin_start_time', models.CharField(max_length=64, verbose_name='开始时间')),
                ('admin_login_status_time', models.CharField(max_length=16, verbose_name='登录时长')),
                ('admin_record_file', models.CharField(max_length=256, verbose_name='操作记录')),
                ('admin_record_mode', models.CharField(choices=[('ssh', 'ssh'), ('guacamole', 'guacamole')], default='ssh', max_length=10, verbose_name='登录协议')),
            ],
            options={
                'verbose_name': '登录管理用户记录表',
                'verbose_name_plural': '登录管理用户记录表',
                'db_table': 'asset_admin_record',
            },
        ),
        migrations.CreateModel(
            name='AssetAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50, unique=True, verbose_name='管理账户')),
                ('username', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='登录用户名')),
                ('password', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='登录密码')),
                ('protocol', models.CharField(choices=[('ssh', 'ssh'), ('telnet', 'telnet'), ('netconf', 'netconf')], default='ssh', max_length=20, verbose_name='协议名')),
                ('port', models.IntegerField(default=22, verbose_name='端口号')),
                ('role', models.CharField(choices=[('3', '超级管理员'), ('2', '管理员'), ('1', '普通用户'), ('0', '查看')], default=3, max_length=20, verbose_name='用户角色')),
                ('en_pwd', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='特权密码')),
            ],
            options={
                'verbose_name_plural': '设备管理账户',
                'db_table': 'asset_account',
            },
        ),
        migrations.CreateModel(
            name='AssetIpInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='标识名')),
                ('ipaddr', models.GenericIPAddressField(verbose_name='IP')),
            ],
            options={
                'verbose_name_plural': '设备关联IP表',
                'db_table': 'asset_ip',
            },
        ),
        migrations.CreateModel(
            name='Attribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='网络属性')),
            ],
            options={
                'verbose_name_plural': '网络属性表',
                'db_table': 'asset_attribute',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='设备类型')),
            ],
            options={
                'verbose_name_plural': '设备类型表',
                'db_table': 'asset_category',
            },
        ),
        migrations.CreateModel(
            name='ContainerService',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(blank=True, max_length=500, null=True, verbose_name='服务名')),
                ('service', models.CharField(blank=True, max_length=500, null=True, verbose_name='镜像')),
                ('working_dir', models.CharField(blank=True, max_length=500, null=True, verbose_name='工作路径')),
                ('config_files', models.CharField(blank=True, max_length=500, null=True, verbose_name='配置文件')),
                ('project', models.CharField(blank=True, max_length=500, null=True, verbose_name='项目名')),
                ('creation_time', models.DateTimeField(blank=True, null=True, verbose_name='创建时间')),
                ('url_path', models.CharField(blank=True, max_length=200, null=True, verbose_name='URL访问路径')),
            ],
            options={
                'verbose_name': '服务管理',
                'verbose_name_plural': '服务管理',
                'db_table': 'asset_service',
            },
        ),
        migrations.CreateModel(
            name='Framework',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='网络架构')),
            ],
            options={
                'verbose_name_plural': '网络架构表',
                'db_table': 'asset_framework',
            },
        ),
        migrations.CreateModel(
            name='HistoricalNetworkDevice',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('serial_num', models.CharField(db_index=True, max_length=200, verbose_name='序列号')),
                ('manage_ip', models.GenericIPAddressField(default='0.0.0.0', verbose_name='管理地址')),
                ('name', models.CharField(default='', max_length=100, verbose_name='资产名称')),
                ('soft_version', models.CharField(default='', max_length=200, verbose_name='软件版本')),
                ('patch_version', models.CharField(default='', max_length=200, null=True, verbose_name='补丁版本')),
                ('u_location_start', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='机架位起始')),
                ('u_location_end', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='机架位结束')),
                ('uptime', models.DateField(default=django.utils.timezone.now, null=True, verbose_name='上线时间')),
                ('expire', models.DateField(blank=True, null=True, verbose_name='维保日期')),
                ('memo', models.TextField(default='', null=True, verbose_name='备注')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '挂牌'), (3, '备用')], default=0, verbose_name='状态')),
                ('ha_status', models.PositiveSmallIntegerField(choices=[(1, '主设备'), (2, '从设备'), (0, '独立设备')], default=0, verbose_name='HA状态')),
                ('chassis', models.IntegerField(default=0, verbose_name='机框编号')),
                ('slot', models.IntegerField(default=0, verbose_name='槽位编号')),
                ('auto_enable', models.BooleanField(default=True, verbose_name='自动化纳管')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical 网络设备表',
                'verbose_name_plural': 'historical 网络设备表',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Idc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='机房名称')),
                ('address', models.CharField(default='', max_length=100, verbose_name='机房地址')),
                ('tel', models.CharField(default='', max_length=30, verbose_name='机房电话')),
            ],
            options={
                'verbose_name_plural': '数据中心表',
                'db_table': 'asset_idc',
            },
        ),
        migrations.CreateModel(
            name='IdcModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30, verbose_name='模块名')),
                ('floor', models.CharField(default='', max_length=30, verbose_name='楼层号')),
                ('area', models.CharField(default='', max_length=30, verbose_name='区域号')),
            ],
            options={
                'verbose_name_plural': '机房模块表',
                'db_table': 'asset_idc_model',
            },
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='硬件型号')),
            ],
            options={
                'verbose_name_plural': '硬件型号表',
                'db_table': 'asset_model',
            },
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_num', models.CharField(max_length=200, unique=True, verbose_name='序列号')),
                ('manage_ip', models.GenericIPAddressField(default='0.0.0.0', verbose_name='管理地址')),
                ('name', models.CharField(default='', max_length=100, verbose_name='资产名称')),
                ('soft_version', models.CharField(default='', max_length=200, verbose_name='软件版本')),
                ('patch_version', models.CharField(default='', max_length=200, null=True, verbose_name='补丁版本')),
                ('u_location_start', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='机架位起始')),
                ('u_location_end', models.IntegerField(default=0, validators=[django.core.validators.MaxValueValidator(50), django.core.validators.MinValueValidator(1)], verbose_name='机架位结束')),
                ('uptime', models.DateField(default=django.utils.timezone.now, null=True, verbose_name='上线时间')),
                ('expire', models.DateField(blank=True, null=True, verbose_name='维保日期')),
                ('memo', models.TextField(default='', null=True, verbose_name='备注')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '挂牌'), (3, '备用')], default=0, verbose_name='状态')),
                ('ha_status', models.PositiveSmallIntegerField(choices=[(1, '主设备'), (2, '从设备'), (0, '独立设备')], default=0, verbose_name='HA状态')),
                ('chassis', models.IntegerField(default=0, verbose_name='机框编号')),
                ('slot', models.IntegerField(default=0, verbose_name='槽位编号')),
                ('auto_enable', models.BooleanField(default=True, verbose_name='自动化纳管')),
            ],
            options={
                'verbose_name': '网络设备表',
                'verbose_name_plural': '网络设备表',
                'db_table': 'asset_networkdevice',
            },
        ),
        migrations.CreateModel(
            name='NetZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=20, unique=True, verbose_name='区域名')),
            ],
            options={
                'verbose_name_plural': '网络区域表',
                'db_table': 'asset_netzone',
            },
        ),
        migrations.CreateModel(
            name='Rack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30, verbose_name='机柜编号')),
                ('rack_row', models.CharField(default='', max_length=30, verbose_name='机柜排')),
            ],
            options={
                'verbose_name_plural': '机柜表',
                'db_table': 'rack',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=30, unique=True, verbose_name='设备角色')),
            ],
            options={
                'verbose_name_plural': '设备角色表',
                'db_table': 'asset_role',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='名称')),
                ('serial_num', models.CharField(blank=True, max_length=200, null=True, verbose_name='序列号/UUID')),
                ('manage_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='管理地址')),
                ('u_location', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='机架')),
                ('sub_asset_type', models.SmallIntegerField(choices=[(0, '服务器'), (1, '虚拟机')], default=0, verbose_name='服务器类型')),
                ('cpu_model', models.CharField(blank=True, max_length=100, null=True, verbose_name='CPU型号')),
                ('cpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='物理CPU个数')),
                ('vcpu_number', models.SmallIntegerField(blank=True, null=True, verbose_name='逻辑CPU个数')),
                ('disk_total', models.CharField(blank=True, max_length=16, null=True, verbose_name='磁盘空间')),
                ('ram_total', models.CharField(blank=True, max_length=100, null=True, verbose_name='内存容量')),
                ('kernel', models.CharField(blank=True, max_length=100, null=True, verbose_name='内核版本')),
                ('system', models.CharField(blank=True, max_length=100, null=True, verbose_name='操作系统')),
                ('host_vars', models.TextField(blank=True, null=True, verbose_name='主机变量')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, '在线'), (1, '下线'), (2, '挂牌'), (3, '备用')], default=0, verbose_name='状态')),
                ('manager_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='归属人')),
                ('manager_tel', models.CharField(blank=True, max_length=100, null=True, verbose_name='归属人联系方式')),
                ('purpose', models.CharField(blank=True, max_length=200, null=True, verbose_name='用途')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '服务器',
                'verbose_name_plural': '服务器',
                'db_table': 'asset_server',
            },
        ),
        migrations.CreateModel(
            name='ServerAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': '服务器和账户关联表',
                'db_table': 'asset_account2server',
            },
        ),
        migrations.CreateModel(
            name='ServerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='硬件型号')),
                ('alias', models.CharField(blank=True, max_length=50, null=True, verbose_name='型号别名')),
            ],
            options={
                'verbose_name_plural': '服务器硬件型号表',
                'db_table': 'server_model',
            },
        ),
        migrations.CreateModel(
            name='ServerVendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='供应商')),
                ('alias', models.CharField(blank=True, max_length=30, null=True, verbose_name='别名')),
            ],
            options={
                'verbose_name_plural': '服务器供应商',
                'db_table': 'server_vendor',
            },
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, unique=True, verbose_name='供应商')),
                ('alias', models.CharField(default='', max_length=30, unique=True, verbose_name='别名')),
            ],
            options={
                'verbose_name_plural': '设备供应商表',
                'db_table': 'asset_vendor',
            },
        ),
        migrations.AddIndex(
            model_name='vendor',
            index=models.Index(fields=['name'], name='asset_vendo_name_1285d0_idx'),
        ),
        migrations.AddIndex(
            model_name='servervendor',
            index=models.Index(fields=['name'], name='server_vend_name_70ba32_idx'),
        ),
        migrations.AddField(
            model_name='servermodel',
            name='vendor',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='asset.servervendor', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='serveraccount',
            name='account',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_server', to='asset.assetaccount', verbose_name='账户'),
        ),
        migrations.AddField(
            model_name='serveraccount',
            name='server',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_account', to='asset.server', verbose_name='服务器'),
        ),
        migrations.AddField(
            model_name='server',
            name='hosted_on',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hosted_on_server', to='asset.server', verbose_name='宿主机'),
        ),
        migrations.AddField(
            model_name='server',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_idc', to='asset.idc', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='server',
            name='idc_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='server_idc_model', to='asset.idcmodel', verbose_name='模块'),
        ),
        migrations.AddField(
            model_name='server',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_model', to='asset.servermodel', verbose_name='服务器型号'),
        ),
        migrations.AddField(
            model_name='server',
            name='rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='server_rack', to='asset.rack', verbose_name='机柜编号'),
        ),
        migrations.AddField(
            model_name='server',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='server_vendor', to='asset.servervendor', verbose_name='供应商'),
        ),
        migrations.AddIndex(
            model_name='role',
            index=models.Index(fields=['name'], name='asset_role_name_69d477_idx'),
        ),
        migrations.AddField(
            model_name='rack',
            name='idc_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='asset.idcmodel', verbose_name='关联模块'),
        ),
        migrations.AddIndex(
            model_name='netzone',
            index=models.Index(fields=['name'], name='asset_netzo_name_c26a83_idx'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='account',
            field=models.ManyToManyField(blank=True, to='asset.AssetAccount', verbose_name='管理账户'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='attribute',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='attribute_asset', to='asset.attribute', verbose_name='网络属性'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='category_asset', to='asset.category', verbose_name='设备类型'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='framework',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='framework_asset', to='asset.framework', verbose_name='网络架构'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='idc',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='idc_asset', to='asset.idc', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='idc_model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='idc_model_asset', to='asset.idcmodel', verbose_name='模块'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='model',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='model_asset', to='asset.model', verbose_name='硬件型号'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='org',
            field=models.ManyToManyField(blank=True, to='users.Organization', verbose_name='org'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='plan',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='releate_device', to='automation.collectionplan', verbose_name='采集方案'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rack_asset', to='asset.rack', verbose_name='机柜编号'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='role',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='role_asset', to='asset.role', verbose_name='设备角色'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor_asset', to='asset.vendor', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='networkdevice',
            name='zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='zone_asset', to='asset.netzone', verbose_name='网络区域'),
        ),
        migrations.AddField(
            model_name='model',
            name='vendor',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='asset.vendor', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='idcmodel',
            name='idc',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='asset.idc', verbose_name='所属机房'),
        ),
        migrations.AddIndex(
            model_name='idc',
            index=models.Index(fields=['name'], name='asset_idc_name_187da9_idx'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='attribute',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.attribute', verbose_name='网络属性'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='category',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.category', verbose_name='设备类型'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='framework',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.framework', verbose_name='网络架构'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='idc',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.idc', verbose_name='所属机房'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='idc_model',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.idcmodel', verbose_name='模块'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='model',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.model', verbose_name='硬件型号'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='plan',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='automation.collectionplan', verbose_name='采集方案'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='rack',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.rack', verbose_name='机柜编号'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='role',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.role', verbose_name='设备角色'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='vendor',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.vendor', verbose_name='供应商'),
        ),
        migrations.AddField(
            model_name='historicalnetworkdevice',
            name='zone',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='asset.netzone', verbose_name='网络区域'),
        ),
        migrations.AddIndex(
            model_name='framework',
            index=models.Index(fields=['name'], name='asset_frame_name_7528f7_idx'),
        ),
        migrations.AddField(
            model_name='containerservice',
            name='on_server',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_on_server', to='asset.server', verbose_name='关联服务器'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name'], name='asset_categ_name_cb6153_idx'),
        ),
        migrations.AddIndex(
            model_name='attribute',
            index=models.Index(fields=['name'], name='asset_attri_name_5328a7_idx'),
        ),
        migrations.AddField(
            model_name='assetipinfo',
            name='device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bind_ip', to='asset.networkdevice', verbose_name='关联设备'),
        ),
        migrations.AddIndex(
            model_name='assetaccount',
            index=models.Index(fields=['name'], name='asset_accou_name_5b4ba2_idx'),
        ),
        migrations.AddField(
            model_name='adminrecord',
            name='admin_login_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='admin_record', to=settings.AUTH_USER_MODEL, verbose_name='用户'),
        ),
        migrations.AddIndex(
            model_name='servermodel',
            index=models.Index(fields=['name'], name='server_mode_name_e2edf8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='servermodel',
            unique_together={('name', 'vendor')},
        ),
        migrations.AlterUniqueTogether(
            name='serveraccount',
            unique_together={('server', 'account')},
        ),
        migrations.AddIndex(
            model_name='rack',
            index=models.Index(fields=['name'], name='rack_name_2a7200_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='rack',
            unique_together={('name', 'idc_model')},
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['manage_ip'], name='asset_netwo_manage__7c873a_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['serial_num'], name='asset_netwo_serial__f349e5_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['name'], name='asset_netwo_name_7b8151_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['soft_version'], name='asset_netwo_soft_ve_f5cb8c_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['patch_version'], name='asset_netwo_patch_v_6b2281_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['uptime'], name='asset_netwo_uptime_da13a6_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['expire'], name='asset_netwo_expire_587d66_idx'),
        ),
        migrations.AddIndex(
            model_name='networkdevice',
            index=models.Index(fields=['status'], name='asset_netwo_status_a07fec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='networkdevice',
            unique_together={('rack', 'u_location_start', 'u_location_end')},
        ),
        migrations.AlterIndexTogether(
            name='networkdevice',
            index_together={('manage_ip', 'name')},
        ),
        migrations.AddIndex(
            model_name='model',
            index=models.Index(fields=['name'], name='asset_model_name_c7c498_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='model',
            unique_together={('name', 'vendor')},
        ),
        migrations.AddIndex(
            model_name='idcmodel',
            index=models.Index(fields=['name'], name='asset_idc_m_name_570a3b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='idcmodel',
            unique_together={('name', 'idc')},
        ),
        migrations.AddIndex(
            model_name='assetipinfo',
            index=models.Index(fields=['name'], name='asset_ip_name_6c7b10_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='assetipinfo',
            unique_together={('name', 'device')},
        ),
    ]
